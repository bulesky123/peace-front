{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;ACHA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;ACLA;AACA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;ACHA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAEA;;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACzFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAEA;;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA","sources":["webpack://myApp/._src_api_home.ts","webpack://myApp/._src_api_house.ts","webpack://myApp/._src_api_my.ts","webpack://myApp/._src_api_weixin.ts","webpack://myApp/._src_constants_status.js","webpack://myApp/._src_pages_in_redux.ts","webpack://myApp/._src_pages_moduleA_pages_house_redux.ts","webpack://myApp/._src_utils_common.ts","webpack://myApp/._src_utils_env.ts","webpack://myApp/._src_utils_error.ts","webpack://myApp/._src_utils_http.ts"],"sourcesContent":["import Http from '../utils/http'\nimport { HTTP_VERSION } from '../constants/status'\n\nexport const userLogin = params => Http.post(`/wechat/${HTTP_VERSION}/userLogin`, params)","import Http from '../utils/http'\nimport { HTTP_VERSION } from '../constants/status'\n\nexport const getHouse = params => Http.post(`/house/${HTTP_VERSION}/list`, params)\nexport const addHouse = params => Http.post(`/house/${HTTP_VERSION}/add`, params)\nexport const queryHouseDetail = params => Http.post(`/house/${HTTP_VERSION}/detail`, params)","import Http from '../utils/http'\nimport { HTTP_VERSION } from '../constants/status'\n\nexport const userInfo = params => Http.post(`/user/${HTTP_VERSION}/info`, params)","import Http from '../utils/http'\nimport { HTTP_VERSION } from '../constants/status'\n\nexport const addNickName = params => Http.post(`/wechat/${HTTP_VERSION}/addNickName`, params)\nexport const addMobile= params => Http.post(`/wechat/${HTTP_VERSION}/bindMobile`, params)","export const HTTP_STATUS = {\n  SUCCESS: 200,\n  CREATED: 201,\n  ACCEPTED: 202,\n  CLIENT_ERROR: 400,\n  AUTHENTICATE: 301,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  SERVER_ERROR: 500,\n  BAD_GATEWAY: 502,\n  SERVICE_UNAVAILABLE: 503,\n  GATEWAY_TIMEOUT: 504\n}\n  \nexport const REFRESH_STATUS = {\n  NORMAL: 0,\n  REFRESHING: 1,\n  NO_MORE_DATA: 2\n}\n\nexport const HTTP_VERSION = 'v1'\n  ","import Taro from '@tarojs/taro'\nimport { userLogin } from '../../api/home'\nimport { userInfo } from '../../api/my'\nimport { addNickName, addMobile } from '../../api/weixin'\nimport Tools from '../../utils/tools'\n\n// Actions\nconst UPDATE = 'GLOBAL_UPDATE'\n\n// Reducer\nconst initState = {\n  init: false,\n  nicknameFlag: false,\n  mobileFlag: false,\n  userInfo: {\n    token: '',\n    headImageUrl: '',\n    nickName: '',\n    phone: '',\n  },\n}\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case UPDATE:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Action Creators\nexport const globalUpdate = params => ({\n  payload: params,\n  type: UPDATE,\n})\n\nexport const codeForOpenId = () => async (dispatch) => {\n  Taro.login({\n    success: async function (res) {\n      if (res.code) {\n        //发起网络请求\n        try {\n          const { data } = await userLogin({jsCode: res.code}) || {}\n          const json = data.data || {}\n          dispatch(globalUpdate({\n            token: json.peaceToken,\n            nicknameFlag: json.nicknameFlag,\n            mobileFlag: json.mobileFlag,\n          }))\n          Taro.setStorageSync('Peace-X-Token', json.peaceToken)\n          Taro.switchTab({\n            url: '/pages/home/index'\n          })\n        } catch (err) {\n          console.log(`请求接口userLogin失败：${err}`)\n        }\n      } else {\n        console.log('登录失败！' + res.errMsg)\n      }\n    }\n  })\n}\n\n\nexport const getUserInfo = () => async(dispatch) => {\n  const { data } = await userInfo({}) || {}\n  const { headImageUrl, nickName } = data.data\n  dispatch(globalUpdate({\n    headImageUrl,\n    nickName,\n  }))\n}\n\nexport const addName = (params) => async(dispatch) => {\n  await addNickName(params) || {}\n  dispatch(globalUpdate({\n    ...params,\n    nicknameFlag: true,\n  }))\n}\nexport const addPhone = (params) => async (dispatch) => {\n  await addMobile(params) || {}\n  dispatch(globalUpdate({\n    mobileFlag: true,\n  }))\n}\n","import { getHouse } from '../../../../api/house'\n\n// Actions\nconst UPDATE = 'HOUSE_UPDATE'\n\n// Reducer\nconst initState = {\n  list: [],\n}\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case UPDATE:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n// Action Creators\nexport const houseUpdate = params => ({\n  payload: params,\n  type: UPDATE,\n})\n\n// \"emptyRoomCount\": 0,\n//  \"houseId\": 0,\n//  \"name\": \"string\",\n//  \"roomCount\": 0\nexport const getHouseList = () => async(dispatch) => {\n  const { data } = await getHouse({})\n  dispatch(houseUpdate({\n    list: data.data.length > 0 ?  data.data : [{\n      emptyRoomCount: 6,\n      houseId: 6,\n      name: \"红木林南1号楼\",\n      roomCount: 10\n    }],\n  }))\n}\n","\nexport const formatNumber = (n: number | string) : string => {\n  n = n.toString()\n  return n[1] ? n : '0' + n\n}\n\nexport const formatTime = date => {\n  const year = date.getFullYear()\n  const month = date.getMonth() + 1\n  const day = date.getDate()\n  const hour = date.getHours()\n  const minute = date.getMinutes()\n  const second = date.getSeconds()\n\n  return [year, month, day].map(formatNumber).join('-') + ' ' + [hour, minute, second].map(formatNumber).join(':')\n}\n\n// 格式化时间戳为日期\nexport const formatTimeStampToTime = (timestamp) => {\n  const date = new Date(timestamp);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\n  const year = date.getFullYear();\n  const month = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1);\n  const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\n  // const hour = date.getHours() + ':';\n  // const minutes = date.getMinutes() + ':';\n  // const second = date.getSeconds();\n  return `${year}-${month}-${day}`\n}\n","const config = {\n  development: {\n    baseUrl: 'https://zfeasy.com',\n  },\n  production: {\n    baseUrl: 'https://zfeasy.com',\n  },\n}\nconst env = config[process.env.NODE_ENV]\n\nexport default env","import { formatTime } from './common'\n/**\n *\n * @param {string} name 错误名字\n * @param {string} action 错误动作描述\n * @param {string} info 错误信息，通常是 fail 返回的\n */\n// eslint-disable-next-line\nexport const logError = (name: string, action: string, info?: string | object ) => {\n  if (!info) {\n    info = 'empty'\n  }\n  let time = formatTime(new Date())\n  console.error(time, name, action, info)\n  if (typeof info === 'object') {\n    info = JSON.stringify(info)\n  }\n}\n\n","import Taro from '@tarojs/taro'\nimport { HTTP_STATUS } from '../constants/status'\nimport env from './env'\nimport { logError } from './error'\n\nconst { baseUrl } = env\n\nexport default {\n  baseOptions(params, method = 'GET') {\n    let { url, data } = params\n    let contentType = 'application/json'\n    contentType = params.contentType || contentType\n    type OptionType = {\n      url: string,\n      data?: object | string,\n      method?: any,\n      header: object,\n      // mode: string,\n      success: any,\n      error: any,\n      xhrFields: object,\n    }\n    const option: OptionType = {\n      url: url.indexOf('http') !== -1 ? url : baseUrl + url,\n      data: data,\n      method: method,\n      header: {\n        'content-type': contentType,\n        'Peace-X-Token': Taro.getStorageSync('Peace-X-Token') || 'AAAA'\n      },\n      // mode: 'cors',\n      xhrFields: { withCredentials: true },\n      success(res) {\n        if (res.statusCode === HTTP_STATUS.NOT_FOUND) {\n          return logError('api', '请求资源不存在')\n        } else if (res.statusCode === HTTP_STATUS.BAD_GATEWAY) {\n          return logError('api', '服务端出现了问题')\n        } else if (res.statusCode === HTTP_STATUS.FORBIDDEN) {\n          return logError('api', '没有权限访问')\n        } else if (res.statusCode === HTTP_STATUS.AUTHENTICATE) {\n          Taro.clearStorage()\n          Taro.navigateTo({\n            url: '/pages/packageA/pages/login/index'\n          })\n          return logError('api', '请先登录')\n        } else if (res.statusCode === HTTP_STATUS.SUCCESS) {\n          return res.data\n        }\n      },\n      error(e) {\n        logError('api', '请求接口出现问题', e)\n      }\n    }\n    // eslint-disable-next-line\n    return Taro.request(option)\n  },\n  get(url, data?: object) {\n    let option = { url, data }\n    return this.baseOptions(option)\n  },\n  post: function (url, data?: object, contentType?: string) {\n    let params = { url, data, contentType }\n    return this.baseOptions(params, 'POST')\n  },\n  put(url, data?: object) {\n    let option = { url, data }\n    return this.baseOptions(option, 'PUT')\n  },\n  delete(url, data?: object) {\n    let option = { url, data }\n    return this.baseOptions(option, 'DELETE')\n  }\n}\n"],"names":[],"sourceRoot":""}