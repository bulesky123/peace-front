{"version":3,"file":"pages/index/index.js","sources":["webpack:///._src_pages_index_index.tsx","webpack:///._src_pages_index_index.scss","webpack:///./src/pages/index/index.tsx?aff8"],"sourcesContent":["import Taro from \"@tarojs/taro\";\nimport { Component } from \"react\";\nimport { View } from \"@tarojs/components\";\nimport { AtTabBar } from \"taro-ui\";\nimport classnames from \"classnames\";\nimport { songType } from \"../../constants/commonType\";\n\nimport \"./index.scss\";\n\n// #region 书写注意\n//\n// 目前 typescript 版本还无法在装饰器模式下将 Props 注入到 Taro.Component 中的 props 属性\n// 需要显示声明 connect 的参数类型并通过 interface 的方式指定 Taro.Component 子类的 props\n// 这样才能完成类型检查和 IDE 的自动提示\n// 使用函数模式则无此限制\n// ref: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20796\n\ntype PageStateProps = {\n  song: songType;\n  counter: {\n    num: number;\n  };\n  recommendPlayList: Array<{\n    id: number;\n    name: string;\n    picUrl: string;\n    playCount: number;\n  }>;\n  recommendDj: Array<{\n    name: string;\n    picUrl: string;\n  }>;\n  recommendNewSong: any;\n  recommend: any;\n};\n\ntype PageDispatchProps = {\n  getRecommendPlayList: () => any;\n  getRecommendDj: () => any;\n  getRecommendNewSong: () => any;\n  getRecommend: () => any;\n  getSongInfo: (object) => any;\n  updatePlayStatus: (object) => any;\n};\n\ntype PageOwnProps = {};\n\ntype PageState = {\n  current: number;\n  showLoading: boolean;\n  bannerList: Array<{\n    typeTitle: string;\n    pic: string;\n    targetId: number;\n  }>;\n  searchValue: string;\n};\n\ntype IProps = PageStateProps & PageDispatchProps & PageOwnProps;\n\ninterface Index {\n  props: IProps;\n}\n\nclass Index extends Component<IProps, PageState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 0,\n      showLoading: true,\n      bannerList: [],\n      searchValue: \"\"\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(this.props, nextProps);\n    this.setState({\n      showLoading: false\n    });\n  }\n\n  componentWillMount() {\n  }\n\n  componentWillUnmount() {}\n\n  componentDidShow() {}\n\n  componentDidHide() {}\n\n  componentDidMount() {\n\n  }\n\n  switchTab(value) {\n    if (value !== 1) return;\n    Taro.reLaunch({\n      url: \"/pages/my/index\"\n    });\n  }\n\n  render() {\n    return (\n      <View\n        className={classnames({\n          index_container: true,\n          // hasMusicBox: !!song.currentSongInfo.name\n        })}\n      >\n        <View>首页5555</View>\n        <AtTabBar\n          fixed\n          selectedColor=\"#d43c33\"\n          tabList={[\n            { title: \"发现\", iconPrefixClass: \"fa\", iconType: \"feed\" },\n            { title: \"我的\", iconPrefixClass: \"fa\", iconType: \"music\" }\n          ]}\n          onClick={this.switchTab.bind(this)}\n          current={this.state.current}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Index;\n","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"网易云音乐\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/index/index', {root:{cn:[]}}, config || {}))\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAgDA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AACA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;;;AAGA;;;AAEA;;;AAEA;;;AAEA;;;AAIA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AAEA;AACA;AACA;AAFA;AADA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AARA;AAPA;AAmBA;;;;AA3DA;AACA;AA6DA;;;;;;;;;;;AC9HA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}